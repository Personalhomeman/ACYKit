#!/usr/bin/ruby

############################################################
#====================***  IMPORTANT  ***====================
# MODIFY THE CONSTANTS WHEN YOU IN THE NEW PROJECT. 
# Just need to change these constants, after that you can use
# the all lanes.
SCHEME      = "ACYKit-Example"
XCWORKSPACE = "ACYKit.xcworkspace"
XCODEPROJ   = "ACYKit.xcodeproj"

PODSNAME    = "ACYKit"
############################################################


fastlane_version "2.39.1"
default_platform :ios


platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    # cocoapods
    
  # update_fastlane  
  end


############################################################
#########################  TEST  ###########################
############################################################
  desc "Runs all the tests"
  lane :test do |options|
    env_ci = options[:env_ci]
    travis = options[:travis]
    scan(
      scheme: "#{SCHEME}",
      devices: "iPhone 7",
      code_coverage: true
    )
    code_coverage(
      env_ci: env_ci,
      travis: travis
    )
  end



############################################################
#####################  CODE COVERAGE  ######################
############################################################

  desc "Run slather to generate a code coverage report"
  lane :code_coverage do |options|
    env_ci    = options[:env_ci]
    travis    = options[:travis]
    slather(
      cobertura_xml: env_ci,
      html: !env_ci,
      show: !env_ci,
      travis: travis,
      binary_basename: "#{PODSNAME}",
      output_directory: "fastlane/test_output/code_coverage/",
      scheme: "#{SCHEME}",
      workspace: "#{XCWORKSPACE}",
      proj: "#{XCODEPROJ}",
      ignore: [
        "#{PODSNAME}",
        "Pods/*"
      ]
    )
  end


############################################################
#######################  TRAVIS-CI  ########################
############################################################

  desc "Run unit tests in travis-ci"
  lane :test_in_travis do
    cocoapods
    test(
      env_ci: true,
      travis: true
    )
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end

